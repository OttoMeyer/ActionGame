Index: ActionGame/core/src/com/mygdx/game/entity/LiveEntity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.mygdx.game.entity;\r\n\r\nimport com.badlogic.gdx.Gdx;\r\nimport com.badlogic.gdx.graphics.Texture;\r\nimport com.badlogic.gdx.graphics.g2d.Animation;\r\nimport com.badlogic.gdx.graphics.g2d.Sprite;\r\nimport com.badlogic.gdx.graphics.g2d.SpriteBatch;\r\nimport com.badlogic.gdx.graphics.g2d.TextureRegion;\r\nimport com.badlogic.gdx.math.Vector2;\r\nimport com.mygdx.game.HitBox;\r\n\r\npublic class LiveEntity extends SimpleEntity {\r\n\r\n    private int FRAME_COLS, FRAME_ROWS;\r\n    public HitBox hitBox;\r\n    public int HP;\r\n    public Vector2 speed;\r\n    TextureRegion[] animationFrames;\r\n    Animation<TextureRegion> walkAnimation;\r\n    Texture walkSheet;\r\n    float stateTime;\r\n\r\n    public LiveEntity(Vector2 location, Vector2 speed, int HP) {\r\n        super(location);\r\n        String nameSprite = \"Nothing.png\";\r\n        FRAME_COLS = 1;\r\n        FRAME_ROWS = 1;\r\n        this.speed = new Vector2(speed);\r\n        this.HP = HP;\r\n        hitBox = new HitBox(16, 16, this.location);\r\n        sprite = new Sprite(new Texture(nameSprite));\r\n        сustomizeAnimation(nameSprite);\r\n    }\r\n\r\n    public LiveEntity(Vector2 location, Vector2 speed, int HP, String nameSprite) {\r\n        super(location);\r\n        FRAME_COLS = 1;\r\n        FRAME_ROWS = 1;\r\n        this.speed = new Vector2(speed);\r\n        this.HP = HP;\r\n        hitBox = new HitBox(16, 16, this.location);\r\n        sprite = new Sprite(new Texture(nameSprite));\r\n        сustomizeAnimation(nameSprite);\r\n    }\r\n\r\n    public void update(){\r\n        Vector2 norSpeed = new Vector2(speed).nor();\r\n        location.x += norSpeed.x * 100 * Gdx.graphics.getDeltaTime();\r\n        location.y += norSpeed.y * 100 * Gdx.graphics.getDeltaTime();\r\n        hitBox.setPosition(location);\r\n    }\r\n\r\n    public void draw(SpriteBatch batch){\r\n        stateTime += Gdx.graphics.getDeltaTime();\r\n        TextureRegion currentFrame = walkAnimation.getKeyFrame(stateTime, true);\r\n        batch.draw(currentFrame, location.x, location.y);\r\n    }\r\n\r\n    private void сustomizeAnimation(String nameSprite){\r\n        walkSheet = new Texture(Gdx.files.internal(nameSprite));\r\n        TextureRegion[][] tmp = TextureRegion.split(walkSheet,\r\n                walkSheet.getWidth() / FRAME_COLS,\r\n                walkSheet.getHeight() / FRAME_ROWS);\r\n        TextureRegion[] walkFrames = new TextureRegion[FRAME_COLS * FRAME_ROWS];\r\n        int index = 0;\r\n        for (int i = 0; i < FRAME_ROWS; i++) {\r\n            for (int j = 0; j < FRAME_COLS; j++) {\r\n                walkFrames[index++] = tmp[i][j];\r\n            }\r\n        }\r\n        walkAnimation = new Animation<TextureRegion>(0.1f, walkFrames);\r\n        stateTime = 0f;\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/ActionGame/core/src/com/mygdx/game/entity/LiveEntity.java b/ActionGame/core/src/com/mygdx/game/entity/LiveEntity.java
--- a/ActionGame/core/src/com/mygdx/game/entity/LiveEntity.java	(revision 18aaf4526f7fb735b61c25e30a3164bc88526b49)
+++ b/ActionGame/core/src/com/mygdx/game/entity/LiveEntity.java	(date 1649698734538)
@@ -44,9 +44,8 @@
     }
 
     public void update(){
-        Vector2 norSpeed = new Vector2(speed).nor();
-        location.x += norSpeed.x * 100 * Gdx.graphics.getDeltaTime();
-        location.y += norSpeed.y * 100 * Gdx.graphics.getDeltaTime();
+        location.x += speed.x * 100 * Gdx.graphics.getDeltaTime();
+        location.y += speed.y * 100 * Gdx.graphics.getDeltaTime();
         hitBox.setPosition(location);
     }
 
Index: ActionGame/core/src/com/mygdx/game/Player.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.mygdx.game;\r\n\r\nimport com.badlogic.gdx.Gdx;\r\nimport com.badlogic.gdx.Input;\r\nimport com.badlogic.gdx.graphics.Texture;\r\nimport com.badlogic.gdx.graphics.g2d.Sprite;\r\nimport com.badlogic.gdx.graphics.g2d.SpriteBatch;\r\nimport com.badlogic.gdx.math.Vector2;\r\nimport com.badlogic.gdx.math.Vector3;\r\nimport com.mygdx.game.entity.LiveEntity;\r\n\r\n\r\nimport java.util.ArrayList;\r\n\r\npublic class Player extends LiveEntity {\r\n    float acceleration;\r\n    float maxSpeed;\r\n    Weapon weapon;\r\n    public Player(float x, float y, float speed){\r\n        super(new Vector2(x,y), new Vector2(0,0), 100, \"Player2.png\");\r\n        this.speed = new Vector2(speed,0);\r\n        this.acceleration = 40;\r\n        this.maxSpeed = 400;\r\n        weapon = new Weapon();\r\n    }\r\n    public void update(){\r\n        if(Gdx.input.isKeyPressed(Input.Keys.LEFT) || Gdx.input.isKeyPressed(Input.Keys.A)) speed.add(-acceleration,0);;\r\n        if(Gdx.input.isKeyPressed(Input.Keys.RIGHT) || Gdx.input.isKeyPressed(Input.Keys.D)) speed.add(acceleration,0);;\r\n        if(Gdx.input.isKeyPressed(Input.Keys.DOWN) || Gdx.input.isKeyPressed(Input.Keys.S)) speed.add(0,-acceleration);;\r\n        if(Gdx.input.isKeyPressed(Input.Keys.UP) || Gdx.input.isKeyPressed(Input.Keys.W)) speed.add(0,acceleration);;\r\n        location.x += speed.x * Gdx.graphics.getDeltaTime();\r\n        location.y += speed.y * Gdx.graphics.getDeltaTime();\r\n        speed.x += -speed.x * 0.1f;\r\n        speed.y += -speed.y * 0.1f;\r\n        hitBox.setPosition(location);\r\n    }\r\n\r\n    public void update(ArrayList<HitBox> hitBoxes){\r\n        if(Gdx.input.isKeyPressed(Input.Keys.LEFT) || Gdx.input.isKeyPressed(Input.Keys.A)) speed.add(-acceleration,0);;\r\n        if(Gdx.input.isKeyPressed(Input.Keys.RIGHT) || Gdx.input.isKeyPressed(Input.Keys.D)) speed.add(acceleration,0);;\r\n        if(Gdx.input.isKeyPressed(Input.Keys.DOWN) || Gdx.input.isKeyPressed(Input.Keys.S)) speed.add(0,-acceleration);;\r\n        if(Gdx.input.isKeyPressed(Input.Keys.UP) || Gdx.input.isKeyPressed(Input.Keys.W)) speed.add(0,acceleration);;\r\n        if(isCrossAll(hitBoxes)){\r\n            speed.setZero();\r\n        }\r\n        super.update();\r\n        //location.x += speed.x * Gdx.graphics.getDeltaTime();\r\n        //location.y += speed.y * Gdx.graphics.getDeltaTime();\r\n        speed.x += -speed.x * 0.1f;\r\n        speed.y += -speed.y * 0.1f;\r\n        hitBox.setPosition(location);\r\n        //System.out.println(isCrossAll(hitBoxes));\r\n\r\n    }\r\n\r\n    private boolean isCrossAll(ArrayList<HitBox> hitBoxes){\r\n        for(HitBox h : hitBoxes){\r\n            if(this.hitBox.isWillCross(h, speed.x * Gdx.graphics.getDeltaTime(), speed.y * Gdx.graphics.getDeltaTime())){\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n    public void makeHit(Еnemy entity, Vector3 mouse, SpriteBatch batch){\r\n        weapon.skillOne.useSkill(entity, mouse, batch);\r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/ActionGame/core/src/com/mygdx/game/Player.java b/ActionGame/core/src/com/mygdx/game/Player.java
--- a/ActionGame/core/src/com/mygdx/game/Player.java	(revision 18aaf4526f7fb735b61c25e30a3164bc88526b49)
+++ b/ActionGame/core/src/com/mygdx/game/Player.java	(date 1649698896179)
@@ -16,11 +16,12 @@
     float acceleration;
     float maxSpeed;
     Weapon weapon;
+    final float DIG = 100;
     public Player(float x, float y, float speed){
         super(new Vector2(x,y), new Vector2(0,0), 100, "Player2.png");
-        this.speed = new Vector2(speed,0);
-        this.acceleration = 40;
-        this.maxSpeed = 400;
+        this.speed = new Vector2(0,0);
+        this.acceleration = 40/DIG;
+        this.maxSpeed = 400/DIG;
         weapon = new Weapon();
     }
     public void update(){
Index: .idea/vcs.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/vcs.xml b/.idea/vcs.xml
new file mode 100644
--- /dev/null	(date 1649697678258)
+++ b/.idea/vcs.xml	(date 1649697678258)
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="VcsDirectoryMappings">
+    <mapping directory="" vcs="Git" />
+  </component>
+</project>
\ No newline at end of file
Index: .idea/gradle.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/gradle.xml b/.idea/gradle.xml
new file mode 100644
--- /dev/null	(date 1649697678283)
+++ b/.idea/gradle.xml	(date 1649697678283)
@@ -0,0 +1,19 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="GradleSettings">
+    <option name="linkedExternalProjectsSettings">
+      <GradleProjectSettings>
+        <option name="distributionType" value="DEFAULT_WRAPPED" />
+        <option name="externalProjectPath" value="$PROJECT_DIR$/ActionGame" />
+        <option name="gradleJvm" value="17" />
+        <option name="modules">
+          <set>
+            <option value="$PROJECT_DIR$/ActionGame" />
+            <option value="$PROJECT_DIR$/ActionGame/core" />
+            <option value="$PROJECT_DIR$/ActionGame/desktop" />
+          </set>
+        </option>
+      </GradleProjectSettings>
+    </option>
+  </component>
+</project>
\ No newline at end of file
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/misc.xml b/.idea/misc.xml
new file mode 100644
--- /dev/null	(date 1649698082128)
+++ b/.idea/misc.xml	(date 1649698082128)
@@ -0,0 +1,5 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="ExternalStorageConfigurationManager" enabled="true" />
+  <component name="ProjectRootManager" version="2" project-jdk-name="17" project-jdk-type="JavaSDK" />
+</project>
\ No newline at end of file
Index: .idea/modules.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/modules.xml b/.idea/modules.xml
new file mode 100644
--- /dev/null	(date 1649697678233)
+++ b/.idea/modules.xml	(date 1649697678233)
@@ -0,0 +1,8 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="ProjectModuleManager">
+    <modules>
+      <module fileurl="file://$PROJECT_DIR$/.idea/ActionGame.iml" filepath="$PROJECT_DIR$/.idea/ActionGame.iml" />
+    </modules>
+  </component>
+</project>
\ No newline at end of file
Index: .idea/ActionGame.iml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/ActionGame.iml b/.idea/ActionGame.iml
new file mode 100644
--- /dev/null	(date 1649697678201)
+++ b/.idea/ActionGame.iml	(date 1649697678201)
@@ -0,0 +1,9 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<module type="JAVA_MODULE" version="4">
+  <component name="NewModuleRootManager" inherit-compiler-output="true">
+    <exclude-output />
+    <content url="file://$MODULE_DIR$" />
+    <orderEntry type="inheritedJdk" />
+    <orderEntry type="sourceFolder" forTests="false" />
+  </component>
+</module>
\ No newline at end of file
Index: .idea/.gitignore
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/.gitignore b/.idea/.gitignore
new file mode 100644
--- /dev/null	(date 1649697678419)
+++ b/.idea/.gitignore	(date 1649697678419)
@@ -0,0 +1,3 @@
+# Default ignored files
+/shelf/
+/workspace.xml
Index: .idea/jarRepositories.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/jarRepositories.xml b/.idea/jarRepositories.xml
new file mode 100644
--- /dev/null	(date 1649697678293)
+++ b/.idea/jarRepositories.xml	(date 1649697678293)
@@ -0,0 +1,50 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="RemoteRepositoriesConfiguration">
+    <remote-repository>
+      <option name="id" value="central" />
+      <option name="name" value="Maven Central repository" />
+      <option name="url" value="https://repo1.maven.org/maven2" />
+    </remote-repository>
+    <remote-repository>
+      <option name="id" value="jboss.community" />
+      <option name="name" value="JBoss Community repository" />
+      <option name="url" value="https://repository.jboss.org/nexus/content/repositories/public/" />
+    </remote-repository>
+    <remote-repository>
+      <option name="id" value="MavenRepo" />
+      <option name="name" value="MavenRepo" />
+      <option name="url" value="https://repo.maven.apache.org/maven2/" />
+    </remote-repository>
+    <remote-repository>
+      <option name="id" value="maven2" />
+      <option name="name" value="maven2" />
+      <option name="url" value="https://oss.sonatype.org/content/repositories/releases/" />
+    </remote-repository>
+    <remote-repository>
+      <option name="id" value="MavenLocal" />
+      <option name="name" value="MavenLocal" />
+      <option name="url" value="file:/$MAVEN_REPOSITORY$/" />
+    </remote-repository>
+    <remote-repository>
+      <option name="id" value="Gradle Central Plugin Repository" />
+      <option name="name" value="Gradle Central Plugin Repository" />
+      <option name="url" value="https://plugins.gradle.org/m2" />
+    </remote-repository>
+    <remote-repository>
+      <option name="id" value="maven" />
+      <option name="name" value="maven" />
+      <option name="url" value="https://oss.sonatype.org/content/repositories/snapshots/" />
+    </remote-repository>
+    <remote-repository>
+      <option name="id" value="maven3" />
+      <option name="name" value="maven3" />
+      <option name="url" value="https://jitpack.io" />
+    </remote-repository>
+    <remote-repository>
+      <option name="id" value="Google" />
+      <option name="name" value="Google" />
+      <option name="url" value="https://dl.google.com/dl/android/maven2/" />
+    </remote-repository>
+  </component>
+</project>
\ No newline at end of file
